import asyncio
from datetime import date, datetime, timedelta
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.jobstores.base import JobLookupError
from aiogram.types import Message
from aiogram.exceptions import TelegramForbiddenError

from keyboards.inline_actors import i_want_1, i_want_2, i_want_3, i_want_4, i_want_5
from loader import techno_dict
from utils.user_bot_parser import check_paid


async def first_message(msg: Message, user_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –æ —Å–µ–±–µ"""
    try:
        await techno_dict['sales_funnel'].remove_job('1_', user_id)
        if not await check_paid(int(user_id)):
            msg_text = """
–°–º–æ—Ç—Ä–∏, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
‚Ä¢ –Ø <b>—Å–æ–±–∏—Ä–∞—é –∫–∞—Å—Ç–∏–Ω–≥–∏</b> —Å–æ –≤—Å–µ—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (–≤–∫–ª—é—á–∞—è —Ç–µ, –æ –∫–æ—Ç–æ—Ä—ã—Ö –∑–Ω–∞—é—Ç —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ —Ö–∏—Ç—Ä–µ–Ω—å–∫–∏–µ).
‚Ä¢ <b>–§–∏–ª—å—Ç—Ä—É—é –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–µ</b>, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Ä–æ–ª–∏ ‚Äú–¥—É–± –≤ —Ä–µ–∫–ª–∞–º–µ —É–¥–æ–±—Ä–µ–Ω–∏–π‚Äù.
‚Ä¢ <b>–î–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Å—å —Å –∫–∞—Å—Ç–∏–Ω–≥-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞–º–∏</b> –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–∞—Å—Ç–∏–Ω–≥–æ–≤  –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, —á—Ç–æ–±—ã —Ç—ã —É–∑–Ω–∞–ª –æ –Ω–∏—Ö –ø–µ—Ä–≤—ã–º.
‚Ä¢ –ò <b>–ø—Ä–∏—Å—ã–ª–∞—é —Ç–µ–±–µ</b> —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Å —É—á–µ—Ç–æ–º –≥–æ–Ω–æ—Ä–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—á–µ—à—å —Å–Ω–∏–º–∞—Ç—å—Å—è.

ü§ñ–•–æ—á–µ—à—å?
–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ —è –≤–∫–ª—é—á–∞—é—Å—å –∏ –Ω–∞—á–∏–Ω–∞—é —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –ø–æ–ª–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å!
            """
            await msg.answer(msg_text, reply_markup=i_want_1)
            await asyncio.sleep(3600)  # –ß–µ—Ä–µ–∑ —á–∞—Å
            if not await check_paid(int(user_id)):
                await second_message(msg, user_id)

    except TelegramForbiddenError:
        pass


async def second_message(msg: Message, user_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –æ —Å–µ–±–µ"""
    try:
        msg_text = """
–ü—Ä–∏–≤–µ—Ç, –∑–≤–µ–∑–¥–∞! –Ø —É–∂–µ –≤—Å—ë –ø—Ä–æ —Ç–µ–±—è –∑–Ω–∞—é: –≤–æ–∑—Ä–∞—Å—Ç, —Ç–∏–ø–∞–∂, —Ç–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã. –í—Å—ë, —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å ‚Äî —ç—Ç–æ –Ω–∞–π—Ç–∏ —Ç–µ–±–µ —Ä–æ–ª—å.
–ù–æ —Ç—É—Ç –Ω–µ–±–æ–ª—å—à–∞—è –∑–∞–≥–≤–æ–∑–¥–∫–∞‚Ä¶ –£ –º–µ–Ω—è –ª–∞–ø–∫–∏. –í–µ—Ä–Ω–µ–µ, –ø–æ–¥–ø–∏—Å–∫–∞. –ë–µ–∑ –Ω–µ—ë —è –Ω–µ –º–æ–≥—É –≤–∫–ª—é—á–∏—Ç—å —Å–≤–æ–π —Å—É–ø–µ—Ä—Ä–∞–¥–∞—Ä –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –∫–∞—Å—Ç–∏–Ω–≥–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è.
    """
        await msg.answer(msg_text, reply_markup=i_want_2)
        await asyncio.sleep(1800)  # –ß–µ—Ä–µ–∑ –ø–æ–ª—á–∞—Å–∞
        if not await check_paid(int(user_id)):
            await third_message(msg, user_id)
    except TelegramForbiddenError:
        pass


async def third_message(msg: Message, user_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –æ —Å–µ–±–µ"""
    try:
        msg_text = """
<b>–í–∞—Å —É—Ç–≤–µ—Ä–¥–∏–ª–∏ –Ω–∞ —Ä–æ–ª—å!</b>

–ó–∞–≤–µ—Ç–Ω—ã–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—á–µ—Ç —É—Å–ª—ã—à–∞—Ç—å –∫–∞–∂–¥—ã–π –∞–∫—Ç—ë—Ä. –ò —è –∑–¥–µ—Å—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç–µ–±–µ –≤ —ç—Ç–æ–º –ø–æ–º–æ—á—å.
–ü–æ–∫–∞ —Ç—ã —á–∏—Ç–∞–µ—à—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≥–¥–µ-—Ç–æ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª–∏ –Ω–æ–≤—ã–π –∫–∞—Å—Ç–∏–Ω–≥. –í–æ–∑–º–æ–∂–Ω–æ, –∏–º–µ–Ω–Ω–æ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç –¥–ª—è —Ç–µ–±—è —Å—Ç–∞—Ä—Ç–æ–º –≤ –±–æ–ª—å—à–æ–π –∫–∞—Ä—å–µ—Ä–µ.
–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ü–æ–¥–ø–∏—à–∏—Å—å, –∏ —è —Å—Ä–∞–∑—É –Ω–∞—á–Ω—É –∏—Å–∫–∞—Ç—å –¥–ª—è —Ç–µ–±—è –∫–∞—Å—Ç–∏–Ω–≥–∏.
    """
        await msg.answer(msg_text, reply_markup=i_want_3)
        await asyncio.sleep(3600)  # –ß–µ—Ä–µ–∑ —á–∞—Å
        if not await check_paid(int(user_id)):
            await fourth_message(msg, user_id)
    except TelegramForbiddenError:
        pass


async def fourth_message(msg: Message, user_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –æ —Å–µ–±–µ"""
    try:
        msg_text = '–î–∞–≤–∞–π –ø–æ–≥–æ–≤–æ—Ä–∏–º –ø–æ –¥—É—à–∞–º?\n\n–ü–æ—á–µ–º—É —Ç—ã –º–µ–Ω—è –Ω–µ —Ö–æ—á–µ—à—å?'
        await msg.answer(msg_text, reply_markup=i_want_4)
        if not await check_paid(int(user_id)):
            await techno_dict['sales_funnel'].second_step(user_id=user_id, message=msg)
    except TelegramForbiddenError:
        pass


async def messages_with_objections(msg: Message, user_id):
    """–ó–∞–ø—É—Å–∫ –∫–∞—Å–∫–∞–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    try:
        if not await check_paid(int(user_id)):
            msg_text_1 = ('–î–∞–≤–∞–π –ø–æ—Å—á–∏—Ç–∞–µ–º. –ï—Å–ª–∏ —Ç—ã —Ç—Ä–∞—Ç–∏—à—å —Ö–æ—Ç—è –±—ã <b>2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å</b> –Ω–∞ –ø–æ–∏—Å–∫ –∫–∞—Å—Ç–∏–Ω–≥–æ–≤, —ç—Ç–æ —É–∂–µ <b>60 '
                          '—á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü.</b> '
                          '–≠—Ç–∏ —á–∞—Å—ã —Ç—ã –º–æ–≥(–ª–∞) –±—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —Ä–µ–ø–µ—Ç–∏—Ü–∏–∏, –ø—Ä–æ–∫–∞—á–∫—É —Å–≤–æ–∏—Ö –∞–∫—Ç–µ—Ä—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–¥—ã—Ö. '
                          '–ü–æ–∫–∞ —Ç—ã –ª–∏—Å—Ç–∞–µ—à—å –¥–µ—Å—è—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö, –∫—Ç–æ-—Ç–æ —É–∂–µ –ø–æ–¥–∞—ë—Ç –∑–∞—è–≤–∫—É –Ω–∞ —Ä–æ–ª—å. '
                          '–ê —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —è –Ω–µ —Ç–æ–ª—å–∫–æ —ç–∫–æ–Ω–æ–º–ª—é —Ç–≤–æ—ë –≤—Ä–µ–º—è, –Ω–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é —Ç–≤–æ–∏ —à–∞–Ω—Å—ã –Ω–∞ —É—Å–ø–µ—Ö.\n\n'
                          'ü§ñ –¢–∞–∫ —á—Ç–æ –≤–æ–ø—Ä–æ—Å: –∑–∞—á–µ–º —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è, –µ—Å–ª–∏ —è –º–æ–≥—É —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ –∏ –±—ã—Å—Ç—Ä–µ–µ?')
            await msg.answer(msg_text_1, reply_markup=i_want_2)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ 9 –ø–æ –ú–°–ö
            await techno_dict['sales_funnel'].remove_job('2_', user_id)

            await asyncio.sleep(10800)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ 12 –ø–æ –ú–°–ö
            if not await check_paid(int(user_id)):
                msg_text_2 = ('–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å—Ç–æ–∏—Ç –∫–∞–∫ –ø–∞—Ä–∞ —á–∞—à–µ–∫ –ª–∞—Ç—Ç–µ –≤ –∫–∞—Ñ–µ. –°—ä–µ–º–∫–∞ –¥–∞–∂–µ –≤ –æ–¥–Ω–æ–º –Ω–µ–±–æ–ª—å—à–æ–º —ç–ø–∏–∑–æ–¥–µ '
                              '—Ç–µ–±–µ –æ–∫—É–ø–∏—Ç –µ—ë –Ω–∞ –º–µ—Å—è—Ü—ã –≤–ø–µ—Ä—ë–¥. –Ø —É–∂–µ –Ω–µ –≥–æ–≤–æ—Ä—é –æ —Ç–æ–º, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ç—É '
                              '—Å–∞–º—É—é —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é —Ç–∞–∫ –¥–∞–≤–Ω–æ –∏—â–µ—à—å. –ê —Ç–∞–º –∏ –º–æ—Ä–≥–Ω—É—Ç—å –Ω–µ —É—Å–ø–µ–µ—à—å, –∫–∞–∫ —Ç–µ–±—è —É–∂–µ '
                              '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é—Ç —É —Å—Ç–µ–Ω–¥–∞ –Ω–∞ –ø—Ä–µ–º—å–µ—Ä–µ —Ñ–∏–ª—å–º–∞.\n\n'
                              'ü§ñ –ù–µ—É–∂–µ–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç–æ–∏—Ç —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–≥–æ—Å—Ç–∏—Ç—å –º–µ–Ω—è –∫–æ—Ñ–µ?')
                await msg.answer(msg_text_2, reply_markup=i_want_5)

                await asyncio.sleep(3600)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ 13 –ø–æ –ú–°–ö
                if not await check_paid(int(user_id)):
                    msg_text_3 = (
                        '–Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–æ–±–æ—Ç, —è –ò–ò. –ò —É –º–µ–Ω—è –µ—Å—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, —ç—Ç–æ –∫–∞–∫ <b>—Å—É–ø–µ—Ä-—Å–∏–ª–∞, '
                        '–∫–æ—Ç–æ—Ä–æ–π —Ç—ã'
                        '–º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è</b>. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –∏ –æ—Ü–µ–Ω–∏–ª–∏. –í–æ—Ç, —Å–º–æ—Ç—Ä–∏, —á—Ç–æ –æ–Ω–∏ –ø–∏—à—É—Ç:\n\n'
                        '‚Äú–Ø –¥—É–º–∞–ª, —á—Ç–æ —ç—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–π –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –Ω–æ –∫–æ–≥–¥–∞ –æ–Ω –º–Ω–µ –Ω–∞—á–∞–ª –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∫–∞—Å—Ç–∏–Ω–≥–∏, '
                        '—è –±—ã–ª —É–¥–∏–≤–ª–µ–Ω, –∫–∞–∫ —Ç–æ—á–Ω–æ –ø–æ–¥ –º–æ–π –∑–∞–ø—Ä–æ—Å –æ–Ω –∏—Ö –Ω–∞—Ö–æ–¥–∏—Ç. –ò –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ, —á–µ–º —è '
                        '–Ω–∞—Ö–æ–¥–∏–ª —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. –í–∏–¥–∏–º–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, —è –Ω–µ –æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö –∑–Ω–∞—é.‚Äù\n\n'
                        '‚Äú–£–¥–æ–±–Ω–æ, —á—Ç–æ –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–∞—Å—Ç–∏–Ω–≥–∏ —Å—Ä–∞–∑—É –≤ –ª–∏—á–∫—É. –¢–µ–ø–µ—Ä—å —è –ø–µ—Ä–≤–∞—è, –∫—Ç–æ –ø–æ–¥–∞—ë—Ç '
                        '–∑–∞—è–≤–∫—É)) –ë–ª–∏–Ω, –≥–¥–µ –≤—ã –±—ã–ª–∏ —Ä–∞–Ω—å—à–µ?)¬ª.')
                    await msg.answer(msg_text_3, reply_markup=i_want_1)
    except TelegramForbiddenError:
        pass


class SalesFunnel:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂. –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—ã—Ö–æ–¥–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç"""

    def __init__(self):
        self._scheduler = AsyncIOScheduler()
        self._scheduler.start()

    async def first_step(self, user_id, message: Message):
        """–ü–µ—Ä–≤–∞—è —Å—Ç—É–ø–µ–Ω—å –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂"""
        self._scheduler.add_job(
            id='1_' + user_id,
            func=first_message,
            kwargs={'user_id': user_id, 'msg': message},
            trigger='interval',
            minutes=15,
            max_instances=1,
        )

    async def second_step(self, user_id, message: Message):
        """–í—Ç–æ—Ä–∞—è —Å—Ç—É–ø–µ–Ω—å –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂. –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –≤ 9 —É—Ç—Ä–∞"""
        # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç datetime –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ 00:00
        current_date = datetime.combine(date.today(), datetime.min.time())
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–¥–∏–Ω –¥–µ–Ω—å –∏ 9 —á–∞—Å–æ–≤ –∫ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–µ
        tomorrow = current_date + timedelta(days=1, hours=9)
        self._scheduler.add_job(
            id='2_' + user_id,
            func=messages_with_objections,
            kwargs={'user_id': user_id, 'msg': message},
            trigger='date',
            run_date=tomorrow,
            max_instances=1,
        )

    async def remove_job(self, step, user_id):
        """step —ç—Ç–æ –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å —Ü–∏—Ñ—Ä–æ–π –∏ –Ω–∏–∂–Ω–∏–º –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º. –¶–∏—Ñ—Ä–∞ - –Ω–æ–º–µ—Ä —à–∞–≥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä '1_' """
        try:
            self._scheduler.remove_job(step + user_id)
        except JobLookupError:
            pass
